/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as Addme2Import } from './routes/addme2'
import { Route as AddmeImport } from './routes/addme'
import { Route as LayoutImport } from './routes/_layout'
import { Route as TermsOfServiceImport } from './routes/TermsOfService'
import { Route as PrivacyPolicyImport } from './routes/PrivacyPolicy'
import { Route as LearnMoreImport } from './routes/LearnMore'
import { Route as ContactUsImport } from './routes/ContactUs'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutGoogleBusinessProfileImport } from './routes/_layout/google-business-profile'
import { Route as LayoutDashboardImport } from './routes/_layout/dashboard'
import { Route as LayoutClientsImport } from './routes/_layout/clients'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as LayoutAddClientImport } from './routes/_layout/add-client'
import { Route as LayoutStaffImport } from './routes/_layout/Staff'
import { Route as LayoutCRMImport } from './routes/_layout/CRM'
import { Route as LayoutAppointmentsImport } from './routes/_layout/Appointments'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const Addme2Route = Addme2Import.update({
  path: '/addme2',
  getParentRoute: () => rootRoute,
} as any)

const AddmeRoute = AddmeImport.update({
  path: '/addme',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const TermsOfServiceRoute = TermsOfServiceImport.update({
  path: '/TermsOfService',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  path: '/PrivacyPolicy',
  getParentRoute: () => rootRoute,
} as any)

const LearnMoreRoute = LearnMoreImport.update({
  path: '/LearnMore',
  getParentRoute: () => rootRoute,
} as any)

const ContactUsRoute = ContactUsImport.update({
  path: '/ContactUs',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutGoogleBusinessProfileRoute =
  LayoutGoogleBusinessProfileImport.update({
    path: '/google-business-profile',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutDashboardRoute = LayoutDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutClientsRoute = LayoutClientsImport.update({
  path: '/clients',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAddClientRoute = LayoutAddClientImport.update({
  path: '/add-client',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutStaffRoute = LayoutStaffImport.update({
  path: '/Staff',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCRMRoute = LayoutCRMImport.update({
  path: '/CRM',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAppointmentsRoute = LayoutAppointmentsImport.update({
  path: '/Appointments',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ContactUs': {
      preLoaderRoute: typeof ContactUsImport
      parentRoute: typeof rootRoute
    }
    '/LearnMore': {
      preLoaderRoute: typeof LearnMoreImport
      parentRoute: typeof rootRoute
    }
    '/PrivacyPolicy': {
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/TermsOfService': {
      preLoaderRoute: typeof TermsOfServiceImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/addme': {
      preLoaderRoute: typeof AddmeImport
      parentRoute: typeof rootRoute
    }
    '/addme2': {
      preLoaderRoute: typeof Addme2Import
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/Appointments': {
      preLoaderRoute: typeof LayoutAppointmentsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/CRM': {
      preLoaderRoute: typeof LayoutCRMImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/Staff': {
      preLoaderRoute: typeof LayoutStaffImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/add-client': {
      preLoaderRoute: typeof LayoutAddClientImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/clients': {
      preLoaderRoute: typeof LayoutClientsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard': {
      preLoaderRoute: typeof LayoutDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/google-business-profile': {
      preLoaderRoute: typeof LayoutGoogleBusinessProfileImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ContactUsRoute,
  LearnMoreRoute,
  PrivacyPolicyRoute,
  TermsOfServiceRoute,
  LayoutRoute.addChildren([
    LayoutAppointmentsRoute,
    LayoutCRMRoute,
    LayoutStaffRoute,
    LayoutAddClientRoute,
    LayoutAdminRoute,
    LayoutClientsRoute,
    LayoutDashboardRoute,
    LayoutGoogleBusinessProfileRoute,
    LayoutItemsRoute,
    LayoutSettingsRoute,
  ]),
  AddmeRoute,
  Addme2Route,
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
