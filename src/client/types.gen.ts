// This file is auto-generated by @hey-api/openapi-ts

export type Appointment = {
  appointment_start: string
  appointment_end: string
  status?: string | null
  notes?: string | null
  client_id: string
  owner_id?: string | null
  id?: string
  created_at?: string
  updated_at?: string
}

export type AppointmentCreate = {
  appointment_start: string
  appointment_end: string
  status?: string | null
  notes?: string | null
  client_id: string
  owner_id?: string | null
  staff_ids: Array<string>
}

export type AppointmentUpdate = {
  appointment_start: string
  appointment_end: string
  status?: string | null
  notes?: string | null
  client_id: string
  owner_id?: string | null
  staff_ids: Array<string>
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type Business = {
  name: string
  address: string | null
  phone_number: string | null
  id?: string
  created_at?: string
  owner_id: string
}

export type BusinessCreate = {
  name: string
  address: string | null
  phone_number: string | null
}

export type BusinessUpdate = {
  name?: string | null
  address?: string | null
  phone_number?: string | null
}

export type Client = {
  first_name: string
  last_name: string
  company?: string | null
  email: string
  phone_number?: string | null
  address?: string | null
  id?: string
  created_at?: string
  owner_id: string
}

export type ClientCreate = {
  first_name: string
  last_name: string
  company?: string | null
  email: string
  phone_number?: string | null
  address?: string | null
  business_id?: string | null
}

export type ClientUpdate = {
  first_name: string
  last_name: string
  company?: string | null
  email: string
  phone_number?: string | null
  address?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Staff = {
  name: string
  description?: string | null
  start_date?: string
  end_date?: string | null
  status?: string
  id?: string
  created_at?: string
  owner_id: string
}

export type StaffCreate = {
  name: string
  description?: string | null
  start_date?: string
  end_date?: string | null
  status?: string
  business_id?: string | null
}

export type StaffUpdate = {
  name?: string
  description?: string | null
  start_date?: string
  end_date?: string | null
  status?: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type AppointmentsCreateAppointmentData = {
  requestBody: AppointmentCreate
}

export type AppointmentsCreateAppointmentResponse = Appointment

export type AppointmentsReadAppointmentsData = {
  businessId?: string | null
  limit?: number
  skip?: number
}

export type AppointmentsReadAppointmentsResponse = Array<Appointment>

export type AppointmentsReadAppointmentData = {
  appointmentId: string
  businessId?: string | null
}

export type AppointmentsReadAppointmentResponse = Appointment

export type AppointmentsUpdateAppointmentData = {
  appointmentId: string
  businessId?: string | null
  requestBody: AppointmentUpdate
}

export type AppointmentsUpdateAppointmentResponse = Appointment

export type AppointmentsDeleteAppointmentData = {
  appointmentId: string
  businessId?: string | null
}

export type AppointmentsDeleteAppointmentResponse = Message

export type BusinessesReadBusinessesData = {
  limit?: number
  skip?: number
}

export type BusinessesReadBusinessesResponse = Array<Business>

export type BusinessesCreateBusinessData = {
  requestBody: BusinessCreate
}

export type BusinessesCreateBusinessResponse = Business

export type BusinessesReadBusinessData = {
  businessId: string
}

export type BusinessesReadBusinessResponse = Business

export type BusinessesUpdateBusinessData = {
  businessId: string
  requestBody: BusinessUpdate
}

export type BusinessesUpdateBusinessResponse = Business

export type BusinessesDeleteBusinessData = {
  businessId: string
}

export type BusinessesDeleteBusinessResponse = Message

export type ClientsCreateClientData = {
  requestBody: ClientCreate
}

export type ClientsCreateClientResponse = Client

export type ClientsReadClientsData = {
  businessId?: string | null
  limit?: number
  skip?: number
}

export type ClientsReadClientsResponse = Array<Client>

export type ClientsUpdateClientData = {
  businessId?: string | null
  clientId: string
  requestBody: ClientUpdate
}

export type ClientsUpdateClientResponse = Client

export type ClientsDeleteClientData = {
  clientId: string
}

export type ClientsDeleteClientResponse = Message

export type ClientsReadClientData = {
  clientId: string
}

export type ClientsReadClientResponse = Client

export type GoogleBusinessAuthorizeGoogleBusinessResponse = unknown

export type GoogleBusinessOauth2CallbackResponse = unknown

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type MetaVerifyWebhookResponse = unknown

export type MetaMetaWebhookResponse = unknown

export type MetaHandleInstagramAuthData = {
  code: string
}

export type MetaHandleInstagramAuthResponse = unknown

export type MetaFetchInstagramProfileResponse = unknown

export type MetaFetchInstagramPostsResponse = unknown

export type MetaCreateInstagramPostData = {
  caption: string
  imageUrl: string
}

export type MetaCreateInstagramPostResponse = unknown

export type MetaIsInstagramConnectedResponse = boolean

export type MetaDisconnectInstagramResponse = unknown

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type StaffsCreateStaffData = {
  requestBody: StaffCreate
}

export type StaffsCreateStaffResponse = Staff

export type StaffsReadStaffsData = {
  businessId?: string | null
  limit?: number
  skip?: number
}

export type StaffsReadStaffsResponse = Array<Staff>

export type StaffsReadStaffData = {
  staffId: string
}

export type StaffsReadStaffResponse = Staff

export type StaffsUpdateStaffData = {
  requestBody: StaffUpdate
  staffId: string
}

export type StaffsUpdateStaffResponse = Staff

export type StaffsDeleteStaffData = {
  staffId: string
}

export type StaffsDeleteStaffResponse = Message

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UsersGetOnboardingStatusResponse = boolean

export type UsersSetOnboardingStatusData = {
  status: boolean
}

export type UsersSetOnboardingStatusResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean

export type UtilsGetFacebookUserData = {
  accessToken: string
}

export type UtilsGetFacebookUserResponse = unknown
